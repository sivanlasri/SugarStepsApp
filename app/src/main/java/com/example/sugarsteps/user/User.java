package com.example.sugarsteps.user;

import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;
import org.jetbrains.annotations.NotNull;

/**
 * User is entity in the application. Annotated with Room persistence annotations and maps to the
 * "User" table in the underlying SQLite database.
 *
 * Features:
 * - Primary key auto-generated for each user.
 * - Default values for some fields (e.g., level = "מתחילים").
 * - Provides getter and setter methods for all fields.
 *
 * @author Sivan Lasri
 * @version 5.0
 */

@Entity(tableName = "User")
public class User {

    /**
     * Unique identifier for the user.
     * Auto-generated by Room when a new User is inserted.
     */
    @PrimaryKey(autoGenerate = true)
    public int userId;

    /**
     * The username of the user.
     * Cannot be {@code null}.
     */
    @NotNull
    @ColumnInfo(name = "username")
    private String username;


    /**
     * The role/title of the user (e.g., "student", "teacher").
     * Cannot be {@code null}.
     */
    @NotNull
    @ColumnInfo(name = "role")
    private String role;

    /**
     * Gender of the user (optional).
     */
    @ColumnInfo(name = "gender")
    private String gender;

    /**
     * Level of the user.
     * Defaults to "מתחילים" (beginners).
     */
    @ColumnInfo(name = "level", defaultValue = "מתחילים")
    private String level;

    /**
     * Phone number of the user (optional).
     */
    @ColumnInfo(name = "phone_number")
    private String phoneNumber;

    /**
     * Age of the user.
     * Default is 0 if not provided.
     */
    @ColumnInfo(name = "ic_age")
    private int age;

    /**
     * Creates a new User with mandatory fields: username and role.
     * Other fields are initialized with default or null values.
     *
     * @param username the username of the user (cannot be {@code null})
     * @param role     the role/title of the user (cannot be {@code null})
     */
    public User(@NotNull String username, @NotNull String role) {
        this.username = username;
        this.role = role;
        this.gender = null;
        this.level = "מתחילים";  // default
        this.phoneNumber = null;
        this.age = 0;
    }


    /**
     * Sets the username of the user.
     *
     * @param username the username (cannot be {@code null})
     */
    public void setUsername(@NotNull String username) {
        this.username = username;
    }


    /**
     * Returns the role of the user.
     *
     * @return the role (never {@code null})
     */
    @NotNull
    public String getRole() {
        return role;
    }

    /**
     * Sets the role of the user.
     *
     * @param role the role/title (cannot be {@code null})
     */
    public void setRole(@NotNull String role) {
        this.role = role;
    }

    /**
     * Returns the gender of the user.
     *
     * @return the gender, or {@code null} if not set
     */
    public String getGender() {
        return gender;
    }

    /**
     * Sets the gender of the user.
     *
     * @param gender the gender, or {@code null}
     */
    public void setGender(String gender) {
        this.gender = gender;
    }

    /**
     * Returns the phone number of the user.
     *
     * @return the phone number, or {@code null} if not set
     */
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * Sets the phone number of the user.
     *
     * @param phoneNumber the phone number, or {@code null}
     */
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }


    /**
     * Returns the age of the user.
     *
     * @return the age, or 0 if not set
     */
    public int getAge() {
        return age;
    }


    /**
     * Sets the age of the user.
     *
     * @param age the age (non-negative integer)
     */
    public void setAge(int age) {
        this.age = age;
    }

    /**
     * Returns the username of the user.
     *
     * @return the username (never {@code null})
     */
    @NotNull
    public String getUsername() {
        return username;
    }

    /**
     * Returns the user ID (primary key).
     *
     * @return the user ID
     */
    public int getUserId() {
        return userId;
    }

    /**
     * Sets the user ID (mainly used internally by Room).
     *
     * @param userId the unique identifier
     */
    public void setUserId(int userId) {
        this.userId = userId;
    }

    /**
     * Returns the level of the user.
     *
     * @return the level (e.g., "מתחילים")
     */
    public String getLevel() {
        return level;
    }


    /**
     * Sets the level of the user.
     *
     * @param level the level (e.g., "מתחילים")
     */
    public void setLevel(String level) {
        this.level = level;
    }
}
